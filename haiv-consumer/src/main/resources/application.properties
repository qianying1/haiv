server.port=8082
server.session-timeout=1800
server.context-path=/haiv
server.tomcat.max-threads=0
server.tomcat.uri-encoding=UTF-8
server.tomcat.basedir=target/tomcat
#
#spring.datasource.name= mytest
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/mytest
#spring.datasource.username= root
#spring.datasource.password=root
## 使用druid数据源
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##spring.datasource.druid.web-stat-filter.url-pattern==stat
#spring.datasource.druid.web-stat-filter.session-stat-max-count=20
##spring.datasource.druid.initialSize=1
#spring.datasource.dbcp2.initial-size=1
#spring.datasource.dbcp2.max-wait-millis=60000
#spring.datasource.dbcp2.min-idle=1
#spring.datasource.dbcp2.time-between-eviction-runs-millis=60000
#spring.datasource.dbcp2.min-evictable-idle-time-millis=300000
#spring.datasource.dbcp2.validation-query=select 'x'
#spring.datasource.dbcp2.test-while-idle=true
#spring.datasource.dbcp2.test-on-borrow=false
#spring.datasource.dbcp2.test-on-return=false
#spring.datasource.dbcp2.pool-prepared-statements=true
#spring.datasource.dbcp2.max-open-prepared-statements=20
#mybatis.mapper-locations=src/main/resources/mapping/*.xml
#mybatis.type-aliases-package= cn.qhb.haiv.model
#pagehelper分页插件
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=count=countSql
#允许上传的文件大小
spring.http.multipart.max-file-size=100MB
#允许缓存文件的大小
spring.http.multipart.file-size-threshold=300MB
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
#redis配置
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.63.100
#spring.redis.host=118.89.43.103
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  
# 连接超时时间（毫秒）
spring.redis.timeout=0  
## Dubbo 服务消费者配置
spring.dubbo.application.name=consumer
spring.dubbo.registry.address=zookeeper://118.89.43.103:2181
#spring.dubbo.registry.address=zookeeper://192.168.63.100:2181
spring.dubbo.scan=cn.qhb.haiv.controller,cn.qhb.haiv.device_monitor.controller,cn.qhb.haiv.test.controller
spring.dubbo.protocol.host=118.89.43.103
#freemarker
spring.freemarker.charset=UTF-8
spring.freemarker.suffix=.ftl
spring.freemarker.check-template-location=true
spring.freemarker.template-loader-path=/WEB-INF/templates
#自定义属性
#打开本地redis服务的命令
custom.redis-service-open-command=d:/redis/redis-server d:/redis/redis.windows.conf
#进行连接测试用于设置的key和value
custom.test-key=redis-test-key
custom.test-val=redis-test-value
custom.swagger2_basepackage=cn.qhb.haiv.controller
custom.swagger2_description=\u786c\u4ef6\u7ba1\u7406\u5e73\u53f0\u7cfb\u7edf\u0061\u0070\u0069\u63a5\u53e3\u6587\u6863
custom.swagger2_version=1.0.0
custom.swagger2_title=\u7cfb\u7edf\u0052\u0045\u0053\u0054\u0066\u0075\u006c\u0020\u0041\u0050\u0049\u0073
custom.QUERY_SUCCESS=\u67e5\u8be2\u6210\u529f\uff01
custom.QUERY_FAIL=\u67e5\u8be2\u5931\u8d25\uff01
custom.DOC_FILE_ALLOWS=doc,docx
custom.EXCEL_FILE_ALLOWS=xls,xlsx
#文件大小限制100MB
custom.EXCEL_FILE_MAX_SIZE=1024*1024*100
#导出文件所存放的位置
custom.EXCEL_EXPORT_FILES_PATH=f:\\download
#文件上传服务器后存储的位置
custom.FILE_BASE_BATH=F:\\uploads
#数据导入excel解释数据开始行
custom.INPUT_DATA_ROW_START=2
#数据导入excel解释数据开始列
custom.INPUT_DATA_COLUMN_START=1
#下面为导入导出模板字段
custom.DEVICE_OUTPUT_TEMPLATE_FIELDS_EN=name,assetModel,cpuModel,manufacturer,seriesNum,operaSys,proIp,ofbVersion,ofbIp,respMan,status,usage,dataStatus,ofd,dofd,cabinetId,capacity,internMemory
custom.DEVICE_OUTPUT_TEMPLATE_FIELDS_CN=\u540d\u79f0\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u540d\u79f0\u002c\u8bbe\u5907\u578b\u53f7\u002c\u0063\u0070\u0075\u578b\u53f7\u002c\u5382\u5546\u002c\u5e8f\u5217\u53f7\u002c\u64cd\u4f5c\u7cfb\u7edf\u002c\u751f\u4ea7\u0069\u0070\u002c\u5e26\u5916\u7248\u672c\u002c\u5e26\u5916\u0069\u0070\u002c\u8d1f\u8d23\u4eba\u002c\u72b6\u6001\uff1a\u5728\u7528\u002f\u4e0b\u7ebf\u002c\u7528\u9014\u002c\u4fe1\u606f\u72b6\u6001\uff1a\u586b\u62a5\u72b6\u6001\uff0c\u7f3a\u002f\u006f\u006b\u002c\u8fc7\u4fdd\u65e5\u671f\uff1a\u0079\u0079\u0079\u0079\u002f\u006d\u006d\u002f\u0064\u0064\u002c\u8fc7\u4fdd\u5929\u6570\u002c\u673a\u67dc\u0069\u0064\u002c\u786c\u76d8\u5bb9\u91cf\uff08\u4ee5\u0047\u4e3a\u5355\u4f4d\uff09\u002c\u5185\u5b58\u5bb9\u91cf\uff08\u4ee5\u0047\u4e3a\u5355\u4f4d\uff09
#DEVICE_OUTPUT_TEMPLATE_FIELDS_CN=名称：用户自定义名称,设备型号,cpu型号,厂商,序列号,操作系统,生产ip,带外版本,带外ip,负责人,状态：在用/下线,用途,信息状态：填报状态，缺/ok,过保日期：yyyy/mm/dd,过保天数,机柜id,硬盘容量（以G为单位）,内存容量（以G为单位）
#下面为导入导出数据字段
custom.DEVICE_OUTPUT_DATA_FIELDS_EN=id,name,assetModel,cpuModel,manufacturer,seriesNum,operaSys,proIp,ofbVersion,ofbIp,respMan,status,usage,dataStatus,ofd,dofd,cabinetId,capacity,internMemory,alterTime,insertTime
custom.DEVICE_OUTPUT_DATA_FIELDS_CN=\u6570\u636e\u4e3b\u952e\u002c\u540d\u79f0\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u540d\u79f0\u002c\u8bbe\u5907\u578b\u53f7\u002c\u0063\u0070\u0075\u578b\u53f7\u002c\u5382\u5546\u002c\u5e8f\u5217\u53f7\u002c\u64cd\u4f5c\u7cfb\u7edf\u002c\u751f\u4ea7\u0069\u0070\u002c\u5e26\u5916\u7248\u672c\u002c\u5e26\u5916\u0069\u0070\u002c\u8d1f\u8d23\u4eba\u002c\u72b6\u6001\uff1a\u5728\u7528\u002f\u4e0b\u7ebf\u002c\u7528\u9014\u002c\u4fe1\u606f\u72b6\u6001\uff1a\u586b\u62a5\u72b6\u6001\uff0c\u7f3a\u002f\u006f\u006b\u002c\u8fc7\u4fdd\u65e5\u671f\uff1a\u0079\u0079\u0079\u0079\u002f\u006d\u006d\u002f\u0064\u0064\u002c\u8fc7\u4fdd\u5929\u6570\u002c\u673a\u67dc\u0069\u0064\u002c\u786c\u76d8\u5bb9\u91cf\uff08\u4ee5\u0047\u4e3a\u5355\u4f4d\uff09\u002c\u5185\u5b58\u5bb9\u91cf\uff08\u4ee5\u0047\u4e3a\u5355\u4f4d\uff09\u002c\u6570\u636e\u4fee\u6539\u65f6\u95f4\u002c\u6570\u636e\u5165\u5e93\u65f6\u95f4
#DEVICE_OUTPUT_TEMPLATE_FIELDS_CN=数据主键,名称：用户自定义名称,设备型号,cpu型号,厂商,序列号,操作系统,生产ip,带外版本,带外ip,负责人,状态：在用/下线,用途,信息状态：填报状态，缺/ok,过保日期：yyyy/mm/dd,过保天数,机柜id,硬盘容量（以G为单位）,内存容量（以G为单位）,数据修改时间,数据入库时间

